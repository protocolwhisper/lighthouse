   Compiling validator_client v0.3.5 (/home/clippo/Documents/rustcontributions/lighthouse/validator_client)
warning: unused import: `futures::future::ok`
  --> validator_client/src/http_api/mod.rs:24:5
   |
24 | use futures::future::ok;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `hyper::body::to_bytes`
  --> validator_client/src/http_api/mod.rs:25:5
   |
25 | use hyper::body::to_bytes;
   |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `convert`, `result`
  --> validator_client/src/http_api/mod.rs:38:11
   |
38 | use std::{convert, result};
   |           ^^^^^^^  ^^^^^^

warning: unused import: `warp::Rejection`
  --> validator_client/src/http_api/mod.rs:46:5
   |
46 | use warp::Rejection;
   |     ^^^^^^^^^^^^^^^

warning: unused imports: `CONTENT_TYPE`, `StatusCode`, `response::Response`
  --> validator_client/src/http_api/mod.rs:49:31
   |
49 |         header::{HeaderValue, CONTENT_TYPE},
   |                               ^^^^^^^^^^^^
50 |         response::Response,
   |         ^^^^^^^^^^^^^^^^^^
51 |         StatusCode,
   |         ^^^^^^^^^^

error[E0277]: the trait bound `GenericResponse<eth2::types::VersionData>: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:274:13
     |
274  |             blocking_signed_json_task(signer, move || {
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `GenericResponse<eth2::types::VersionData>`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0277]: the trait bound `GenericResponse<Health>: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:288:13
     |
288  |             blocking_signed_json_task(signer, move || {
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `GenericResponse<Health>`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0277]: the trait bound `GenericResponse<types::ConfigAndPreset>: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:302:13
     |
302  |             blocking_signed_json_task(signer, move || {
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `GenericResponse<types::ConfigAndPreset>`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0277]: the trait bound `GenericResponse<Vec<eth2::lighthouse_vc::types::ValidatorData>>: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:315:13
     |
315  |             blocking_signed_json_task(signer, move || {
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `GenericResponse<Vec<eth2::lighthouse_vc::types::ValidatorData>>`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:314:10
    |
314 |         .then(|validator_store: Arc<ValidatorStore<T, E>>, signer| {
    |          ^^^^ ---------------------------------------------------- found signature defined here
    |          |
    |          expected due to this
    |
    = note: expected closure signature `fn(std::result::Result<Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(Arc<_>, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:314:15: 314:67]` to implement `warp::generic::Func<(std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0277]: the trait bound `GenericResponse<eth2::lighthouse_vc::types::ValidatorData>: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:341:17
     |
341  |                 blocking_signed_json_task(signer, move || {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `GenericResponse<eth2::lighthouse_vc::types::ValidatorData>`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:339:10
    |
339 |         .then(
    |          ^^^^ expected due to this
340 |             |validator_pubkey: PublicKey, validator_store: Arc<ValidatorStore<T, E>>, signer| {
    |             --------------------------------------------------------------------------------- found signature defined here
    |
    = note: expected closure signature `fn(GenericPublicKey<_>, std::result::Result<Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(GenericPublicKey<_>, Arc<_>, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:340:13: 340:94]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0277]: the trait bound `GenericResponse<SystemHealthVC>: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:375:13
     |
375  |             blocking_signed_json_task(signer, move || {
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `GenericResponse<SystemHealthVC>`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:374:10
    |
374 |         .then(|sysinfo, app_start: std::time::Instant, val_dir, signer| {
    |          ^^^^ --------------------------------------------------------- found signature defined here
    |          |
    |          expected due to this
    |
    = note: expected closure signature `fn(Arc<_>, std::time::Instant, std::result::Result<PathBuf, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(Arc<_>, std::time::Instant, PathBuf, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:374:15: 374:72]` to implement `warp::generic::Func<(Arc<parking_lot::lock_api::RwLock<parking_lot::RawRwLock, sysinfo::System>>, std::time::Instant, std::result::Result<PathBuf, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0277]: the trait bound `GenericResponse<HashMap<std::string::String, std::option::Option<std::string::String>>>: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:398:17
     |
398  |                 blocking_signed_json_task(signer, move || {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `GenericResponse<HashMap<std::string::String, std::option::Option<std::string::String>>>`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:392:10
    |
392 |           .then(
    |            ^^^^ expected due to this
393 | /             |validator_store: Arc<ValidatorStore<T, E>>,
394 | |              graffiti_file: Option<GraffitiFile>,
395 | |              graffiti_flag: Option<Graffiti>,
396 | |              signer,
397 | |              log| {
    | |_________________- found signature defined here
    |
    = note: expected closure signature `fn(std::result::Result<Arc<_>, Rejection>, std::option::Option<_>, std::option::Option<_>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
               found closure signature `fn(Arc<_>, std::option::Option<_>, std::option::Option<_>, _, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:393:13: 397:18]` to implement `warp::generic::Func<(std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, std::option::Option<GraffitiFile>, std::option::Option<types::Graffiti>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>)>`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:314:10
    |
314 |         .then(|validator_store: Arc<ValidatorStore<T, E>>, signer| {
    |          ^^^^ ---------------------------------------------------- found signature defined here
    |          |
    |          expected due to this
    |
    = note: expected closure signature `fn(std::result::Result<std::sync::Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(std::sync::Arc<_>, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:314:15: 314:67]` to implement `warp::generic::Func<(std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:339:10
    |
339 |         .then(
    |          ^^^^ expected due to this
340 |             |validator_pubkey: PublicKey, validator_store: Arc<ValidatorStore<T, E>>, signer| {
    |             --------------------------------------------------------------------------------- found signature defined here
    |
    = note: expected closure signature `fn(GenericPublicKey<_>, std::result::Result<std::sync::Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(GenericPublicKey<_>, std::sync::Arc<_>, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:340:13: 340:94]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:374:10
    |
374 |         .then(|sysinfo, app_start: std::time::Instant, val_dir, signer| {
    |          ^^^^ --------------------------------------------------------- found signature defined here
    |          |
    |          expected due to this
    |
    = note: expected closure signature `fn(std::sync::Arc<_>, std::time::Instant, std::result::Result<std::path::PathBuf, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(std::sync::Arc<_>, std::time::Instant, std::path::PathBuf, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:374:15: 374:72]` to implement `warp::generic::Func<(std::sync::Arc<parking_lot::lock_api::RwLock<parking_lot::RawRwLock, sysinfo::System>>, std::time::Instant, std::result::Result<std::path::PathBuf, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0277]: the trait bound `GenericResponse<PostValidatorsResponseData>: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:438:17
     |
438  |                 blocking_signed_json_task(signer, move || {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `GenericResponse<PostValidatorsResponseData>`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:430:10
    |
430 |           .then(
    |            ^^^^ expected due to this
431 | /             move |body: Vec<api_types::ValidatorRequest>,
432 | |                   validator_dir: PathBuf,
433 | |                   secrets_dir: PathBuf,
434 | |                   validator_store: Arc<ValidatorStore<T, E>>,
435 | |                   spec: Arc<ChainSpec>,
436 | |                   signer,
437 | |                   task_executor: TaskExecutor| {
    | |______________________________________________- found signature defined here
    |
    = note: expected closure signature `fn(_, std::result::Result<PathBuf, Rejection>, std::result::Result<PathBuf, Rejection>, std::result::Result<Arc<_>, Rejection>, Arc<_>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor) -> _`
               found closure signature `fn(Vec<eth2::lighthouse_vc::types::ValidatorRequest>, PathBuf, PathBuf, Arc<_>, Arc<_>, _, TaskExecutor) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:431:13: 437:47]` to implement `warp::generic::Func<(_, std::result::Result<PathBuf, Rejection>, std::result::Result<PathBuf, Rejection>, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, Arc<types::ChainSpec>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor)>`

error[E0277]: the trait bound `GenericResponse<std::collections::HashMap<std::string::String, std::option::Option<std::string::String>>>: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:398:17
     |
398  |                 blocking_signed_json_task(signer, move || {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `GenericResponse<std::collections::HashMap<std::string::String, std::option::Option<std::string::String>>>`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:392:10
    |
392 |           .then(
    |            ^^^^ expected due to this
393 | /             |validator_store: Arc<ValidatorStore<T, E>>,
394 | |              graffiti_file: Option<GraffitiFile>,
395 | |              graffiti_flag: Option<Graffiti>,
396 | |              signer,
397 | |              log| {
    | |_________________- found signature defined here
    |
    = note: expected closure signature `fn(std::result::Result<std::sync::Arc<_>, Rejection>, std::option::Option<_>, std::option::Option<_>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
               found closure signature `fn(std::sync::Arc<_>, std::option::Option<_>, std::option::Option<_>, _, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:393:13: 397:18]` to implement `warp::generic::Func<(std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, std::option::Option<graffiti_file::GraffitiFile>, std::option::Option<types::Graffiti>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>)>`

error[E0277]: the trait bound `GenericResponse<Vec<CreatedValidator>>: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:485:17
     |
485  |                 blocking_signed_json_task(signer, move || {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `GenericResponse<Vec<CreatedValidator>>`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:477:10
    |
477 |           .then(
    |            ^^^^ expected due to this
478 | /             move |body: api_types::CreateValidatorsMnemonicRequest,
479 | |                   validator_dir: PathBuf,
480 | |                   secrets_dir: PathBuf,
481 | |                   validator_store: Arc<ValidatorStore<T, E>>,
482 | |                   spec: Arc<ChainSpec>,
483 | |                   signer,
484 | |                   task_executor: TaskExecutor| {
    | |______________________________________________- found signature defined here
    |
    = note: expected closure signature `fn(_, std::result::Result<PathBuf, Rejection>, std::result::Result<PathBuf, Rejection>, std::result::Result<Arc<_>, Rejection>, Arc<_>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor) -> _`
               found closure signature `fn(eth2::lighthouse_vc::types::CreateValidatorsMnemonicRequest, PathBuf, PathBuf, Arc<_>, Arc<_>, _, TaskExecutor) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:478:13: 484:47]` to implement `warp::generic::Func<(_, std::result::Result<PathBuf, Rejection>, std::result::Result<PathBuf, Rejection>, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, Arc<types::ChainSpec>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor)>`

error[E0277]: the trait bound `GenericResponse<eth2::lighthouse_vc::types::ValidatorData>: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:533:17
     |
533  |                 blocking_signed_json_task(signer, move || {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `GenericResponse<eth2::lighthouse_vc::types::ValidatorData>`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:526:10
    |
526 |           .then(
    |            ^^^^ expected due to this
527 | /             move |body: api_types::KeystoreValidatorsPostRequest,
528 | |                   validator_dir: PathBuf,
529 | |                   secrets_dir: PathBuf,
530 | |                   validator_store: Arc<ValidatorStore<T, E>>,
531 | |                   signer,
532 | |                   task_executor: TaskExecutor| {
    | |______________________________________________- found signature defined here
    |
    = note: expected closure signature `fn(_, std::result::Result<PathBuf, Rejection>, std::result::Result<PathBuf, Rejection>, std::result::Result<Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor) -> _`
               found closure signature `fn(eth2::lighthouse_vc::types::KeystoreValidatorsPostRequest, PathBuf, PathBuf, Arc<_>, _, TaskExecutor) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:527:13: 532:47]` to implement `warp::generic::Func<(_, std::result::Result<PathBuf, Rejection>, std::result::Result<PathBuf, Rejection>, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor)>`

error[E0277]: the trait bound `(): Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:617:17
     |
617  |                 blocking_signed_json_task(signer, move || {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `()`
     |
     = help: the trait `Reply` is implemented for `(T,)`
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:612:10
    |
612 |           .then(
    |            ^^^^ expected due to this
613 | /             |body: Vec<api_types::Web3SignerValidatorRequest>,
614 | |              validator_store: Arc<ValidatorStore<T, E>>,
615 | |              signer,
616 | |              task_executor: TaskExecutor| {
    | |_________________________________________- found signature defined here
    |
    = note: expected closure signature `fn(_, std::result::Result<Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor) -> _`
               found closure signature `fn(Vec<eth2::lighthouse_vc::types::Web3SignerValidatorRequest>, Arc<_>, _, TaskExecutor) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:613:13: 616:42]` to implement `warp::generic::Func<(_, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor)>`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:430:10
    |
430 |           .then(
    |            ^^^^ expected due to this
431 | /             move |body: Vec<api_types::ValidatorRequest>,
432 | |                   validator_dir: PathBuf,
433 | |                   secrets_dir: PathBuf,
434 | |                   validator_store: Arc<ValidatorStore<T, E>>,
435 | |                   spec: Arc<ChainSpec>,
436 | |                   signer,
437 | |                   task_executor: TaskExecutor| {
    | |______________________________________________- found signature defined here
    |
    = note: expected closure signature `fn(_, std::result::Result<std::path::PathBuf, Rejection>, std::result::Result<std::path::PathBuf, Rejection>, std::result::Result<std::sync::Arc<_>, Rejection>, std::sync::Arc<_>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor) -> _`
               found closure signature `fn(Vec<eth2::lighthouse_vc::types::ValidatorRequest>, std::path::PathBuf, std::path::PathBuf, std::sync::Arc<_>, std::sync::Arc<_>, _, TaskExecutor) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:431:13: 437:47]` to implement `warp::generic::Func<(_, std::result::Result<std::path::PathBuf, Rejection>, std::result::Result<std::path::PathBuf, Rejection>, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, std::sync::Arc<types::ChainSpec>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor)>`

error[E0277]: the trait bound `(): Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:672:17
     |
672  |                 blocking_signed_json_task(signer, move || {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `()`
     |
     = help: the trait `Reply` is implemented for `(T,)`
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:665:10
    |
665 |           .then(
    |            ^^^^ expected due to this
666 | /             |validator_pubkey: PublicKey,
667 | |              body: api_types::ValidatorPatchRequest,
668 | |              validator_store: Arc<ValidatorStore<T, E>>,
669 | |              graffiti_file: Option<GraffitiFile>,
670 | |              signer,
671 | |              task_executor: TaskExecutor| {
    | |_________________________________________- found signature defined here
    |
    = note: expected closure signature `fn(GenericPublicKey<_>, _, std::result::Result<Arc<_>, Rejection>, std::option::Option<_>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor) -> _`
               found closure signature `fn(GenericPublicKey<_>, ValidatorPatchRequest, Arc<_>, std::option::Option<_>, _, TaskExecutor) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:666:13: 671:42]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, _, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, std::option::Option<GraffitiFile>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor)>`

error[E0277]: the trait bound `AuthResponse: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:736:13
     |
736  |             blocking_signed_json_task(signer, move || {
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `AuthResponse`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:477:10
    |
477 |           .then(
    |            ^^^^ expected due to this
478 | /             move |body: api_types::CreateValidatorsMnemonicRequest,
479 | |                   validator_dir: PathBuf,
480 | |                   secrets_dir: PathBuf,
481 | |                   validator_store: Arc<ValidatorStore<T, E>>,
482 | |                   spec: Arc<ChainSpec>,
483 | |                   signer,
484 | |                   task_executor: TaskExecutor| {
    | |______________________________________________- found signature defined here
    |
    = note: expected closure signature `fn(_, std::result::Result<std::path::PathBuf, Rejection>, std::result::Result<std::path::PathBuf, Rejection>, std::result::Result<std::sync::Arc<_>, Rejection>, std::sync::Arc<_>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor) -> _`
               found closure signature `fn(eth2::lighthouse_vc::types::CreateValidatorsMnemonicRequest, std::path::PathBuf, std::path::PathBuf, std::sync::Arc<_>, std::sync::Arc<_>, _, TaskExecutor) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:478:13: 484:47]` to implement `warp::generic::Func<(_, std::result::Result<std::path::PathBuf, Rejection>, std::result::Result<std::path::PathBuf, Rejection>, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, std::sync::Arc<types::ChainSpec>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor)>`

error[E0277]: the trait bound `ExportKeystoresResponse: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:754:17
     |
754  |                 blocking_signed_json_task(signer, move || {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `ExportKeystoresResponse`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:752:10
    |
752 |         .then(
    |          ^^^^ expected due to this
753 |             move |request, signer, validator_store, task_executor, log| {
    |             ----------------------------------------------------------- found signature defined here
    |
    = note: expected closure signature `fn(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
               found closure signature `fn(DeleteKeystoresRequest, _, Arc<ValidatorStore<_, _>>, TaskExecutor, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:753:13: 753:72]` to implement `warp::generic::Func<(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>)>`

error[E0277]: the trait bound `GenericResponse<GetFeeRecipientResponse>: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:781:17
     |
781  |                 blocking_signed_json_task(signer, move || {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `GenericResponse<GetFeeRecipientResponse>`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:779:10
    |
779 |         .then(
    |          ^^^^ expected due to this
780 |             |validator_pubkey: PublicKey, validator_store: Arc<ValidatorStore<T, E>>, signer| {
    |             --------------------------------------------------------------------------------- found signature defined here
    |
    = note: expected closure signature `fn(GenericPublicKey<_>, std::result::Result<Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(GenericPublicKey<_>, Arc<_>, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:780:13: 780:94]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:526:10
    |
526 |           .then(
    |            ^^^^ expected due to this
527 | /             move |body: api_types::KeystoreValidatorsPostRequest,
528 | |                   validator_dir: PathBuf,
529 | |                   secrets_dir: PathBuf,
530 | |                   validator_store: Arc<ValidatorStore<T, E>>,
531 | |                   signer,
532 | |                   task_executor: TaskExecutor| {
    | |______________________________________________- found signature defined here
    |
    = note: expected closure signature `fn(_, std::result::Result<std::path::PathBuf, Rejection>, std::result::Result<std::path::PathBuf, Rejection>, std::result::Result<std::sync::Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor) -> _`
               found closure signature `fn(eth2::lighthouse_vc::types::KeystoreValidatorsPostRequest, std::path::PathBuf, std::path::PathBuf, std::sync::Arc<_>, _, TaskExecutor) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:527:13: 532:47]` to implement `warp::generic::Func<(_, std::result::Result<std::path::PathBuf, Rejection>, std::result::Result<std::path::PathBuf, Rejection>, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor)>`

error[E0277]: the trait bound `(): Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:824:17
     |
824  |                 blocking_signed_json_task(signer, move || {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `()`
     |
     = help: the trait `Reply` is implemented for `(T,)`
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:819:10
    |
819 |           .then(
    |            ^^^^ expected due to this
820 | /             |validator_pubkey: PublicKey,
821 | |              request: api_types::UpdateFeeRecipientRequest,
822 | |              validator_store: Arc<ValidatorStore<T, E>>,
823 | |              signer| {
    | |____________________- found signature defined here
    |
    = note: expected closure signature `fn(GenericPublicKey<_>, _, std::result::Result<Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(GenericPublicKey<_>, UpdateFeeRecipientRequest, Arc<_>, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:820:13: 823:21]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, _, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:612:10
    |
612 |           .then(
    |            ^^^^ expected due to this
613 | /             |body: Vec<api_types::Web3SignerValidatorRequest>,
614 | |              validator_store: Arc<ValidatorStore<T, E>>,
615 | |              signer,
616 | |              task_executor: TaskExecutor| {
    | |_________________________________________- found signature defined here
    |
    = note: expected closure signature `fn(_, std::result::Result<std::sync::Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor) -> _`
               found closure signature `fn(Vec<eth2::lighthouse_vc::types::Web3SignerValidatorRequest>, std::sync::Arc<_>, _, TaskExecutor) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:613:13: 616:42]` to implement `warp::generic::Func<(_, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor)>`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:665:10
    |
665 |           .then(
    |            ^^^^ expected due to this
666 | /             |validator_pubkey: PublicKey,
667 | |              body: api_types::ValidatorPatchRequest,
668 | |              validator_store: Arc<ValidatorStore<T, E>>,
669 | |              graffiti_file: Option<GraffitiFile>,
670 | |              signer,
671 | |              task_executor: TaskExecutor| {
    | |_________________________________________- found signature defined here
    |
    = note: expected closure signature `fn(GenericPublicKey<_>, _, std::result::Result<std::sync::Arc<_>, Rejection>, std::option::Option<_>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor) -> _`
               found closure signature `fn(GenericPublicKey<_>, ValidatorPatchRequest, std::sync::Arc<_>, std::option::Option<_>, _, TaskExecutor) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:666:13: 671:42]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, _, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, std::option::Option<graffiti_file::GraffitiFile>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor)>`

error[E0599]: the method `map` exists for struct `Then<And<And<And<And<And<And<And<And<Exact<Opaque<&str>>, ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>`, but its trait bounds were not satisfied
   --> validator_client/src/http_api/mod.rs:849:10
    |
811 |       let post_fee_recipient = eth_v1
    |  ______________________________-
812 | |         .and(warp::path("validator"))
813 | |         .and(warp::path::param::<PublicKey>())
814 | |         .and(warp::path("feerecipient"))
...   |
848 | |         )
849 | |         .map(|reply| warp::reply::with_status(reply, warp::http::StatusCode::ACCEPTED));
    | |         -^^^ method cannot be called due to unsatisfied trait bounds
    | |_________|
    | 
    |
   ::: /home/clippo/.cargo/git/checkouts/warp-e423c7de4eccaa31/7e75acc/src/filter/then.rs:11:1
    |
11  |   pub struct Then<T, F> {
    |   ---------------------
    |   |
    |   doesn't satisfy `_: FilterBase`
    |   doesn't satisfy `_: Filter`
    |   doesn't satisfy `_: Iterator`
    |   doesn't satisfy `_: StreamExt`
    |   doesn't satisfy `_: Stream`
    |
    = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-d523eba1c9d608f9.long-type-8595461928439969746.txt'
    = note: the following trait bounds were not satisfied:
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: Stream`
            which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: tokio_stream::StreamExt`
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: warp::filter::FilterBase`
            which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: warp::Filter`
            `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: Stream`
            which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: tokio_stream::StreamExt`
            `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: warp::filter::FilterBase`
            which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: warp::Filter`
            `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: Stream`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: tokio_stream::StreamExt`
            `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: warp::filter::FilterBase`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: warp::Filter`
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: Iterator`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: Iterator`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:752:10
    |
752 |         .then(
    |          ^^^^ expected due to this
753 |             move |request, signer, validator_store, task_executor, log| {
    |             ----------------------------------------------------------- found signature defined here
    |
    = note: expected closure signature `fn(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
               found closure signature `fn(DeleteKeystoresRequest, _, std::sync::Arc<ValidatorStore<_, _>>, TaskExecutor, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:753:13: 753:72]` to implement `warp::generic::Func<(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>)>`

error[E0277]: the trait bound `(): Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:861:17
     |
861  |                 blocking_signed_json_task(signer, move || {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `()`
     |
     = help: the trait `Reply` is implemented for `(T,)`
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:859:10
    |
859 |         .then(
    |          ^^^^ expected due to this
860 |             |validator_pubkey: PublicKey, validator_store: Arc<ValidatorStore<T, E>>, signer| {
    |             --------------------------------------------------------------------------------- found signature defined here
    |
    = note: expected closure signature `fn(GenericPublicKey<_>, std::result::Result<Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(GenericPublicKey<_>, Arc<_>, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:860:13: 860:94]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:779:10
    |
779 |         .then(
    |          ^^^^ expected due to this
780 |             |validator_pubkey: PublicKey, validator_store: Arc<ValidatorStore<T, E>>, signer| {
    |             --------------------------------------------------------------------------------- found signature defined here
    |
    = note: expected closure signature `fn(GenericPublicKey<_>, std::result::Result<std::sync::Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(GenericPublicKey<_>, std::sync::Arc<_>, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:780:13: 780:94]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0599]: the method `map` exists for struct `Then<And<And<And<And<And<And<And<Exact<Opaque<&str>>, Exact<...>>, ...>, ...>, ...>, ...>, ...>, ...>, ...>`, but its trait bounds were not satisfied
   --> validator_client/src/http_api/mod.rs:886:10
    |
852 |       let delete_fee_recipient = eth_v1
    |  ________________________________-
853 | |         .and(warp::path("validator"))
854 | |         .and(warp::path::param::<PublicKey>())
855 | |         .and(warp::path("feerecipient"))
...   |
885 | |         )
886 | |         .map(|reply| warp::reply::with_status(reply, warp::http::StatusCode::NO_CONTENT));
    | |         -^^^ method cannot be called due to unsatisfied trait bounds
    | |_________|
    | 
    |
   ::: /home/clippo/.cargo/git/checkouts/warp-e423c7de4eccaa31/7e75acc/src/filter/then.rs:11:1
    |
11  |   pub struct Then<T, F> {
    |   ---------------------
    |   |
    |   doesn't satisfy `_: FilterBase`
    |   doesn't satisfy `_: Filter`
    |   doesn't satisfy `_: Iterator`
    |   doesn't satisfy `_: StreamExt`
    |   doesn't satisfy `_: Stream`
    |
    = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-d523eba1c9d608f9.long-type-11718294443365172138.txt'
    = note: the following trait bounds were not satisfied:
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: Stream`
            which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: tokio_stream::StreamExt`
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: warp::filter::FilterBase`
            which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: warp::Filter`
            `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: Stream`
            which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: tokio_stream::StreamExt`
            `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: warp::filter::FilterBase`
            which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: warp::Filter`
            `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: Stream`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: tokio_stream::StreamExt`
            `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: warp::filter::FilterBase`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: warp::Filter`
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: Iterator`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: Iterator`

error[E0277]: the trait bound `GenericResponse<GetGasLimitResponse>: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:898:17
     |
898  |                 blocking_signed_json_task(signer, move || {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `GenericResponse<GetGasLimitResponse>`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:896:10
    |
896 |         .then(
    |          ^^^^ expected due to this
897 |             |validator_pubkey: PublicKey, validator_store: Arc<ValidatorStore<T, E>>, signer| {
    |             --------------------------------------------------------------------------------- found signature defined here
    |
    = note: expected closure signature `fn(GenericPublicKey<_>, std::result::Result<Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(GenericPublicKey<_>, Arc<_>, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:897:13: 897:94]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:819:10
    |
819 |           .then(
    |            ^^^^ expected due to this
820 | /             |validator_pubkey: PublicKey,
821 | |              request: api_types::UpdateFeeRecipientRequest,
822 | |              validator_store: Arc<ValidatorStore<T, E>>,
823 | |              signer| {
    | |____________________- found signature defined here
    |
    = note: expected closure signature `fn(GenericPublicKey<_>, _, std::result::Result<std::sync::Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(GenericPublicKey<_>, UpdateFeeRecipientRequest, std::sync::Arc<_>, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:820:13: 823:21]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, _, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0277]: the trait bound `(): Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:933:17
     |
933  |                 blocking_signed_json_task(signer, move || {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `()`
     |
     = help: the trait `Reply` is implemented for `(T,)`
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:928:10
    |
928 |           .then(
    |            ^^^^ expected due to this
929 | /             |validator_pubkey: PublicKey,
930 | |              request: api_types::UpdateGasLimitRequest,
931 | |              validator_store: Arc<ValidatorStore<T, E>>,
932 | |              signer| {
    | |____________________- found signature defined here
    |
    = note: expected closure signature `fn(GenericPublicKey<_>, _, std::result::Result<Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(GenericPublicKey<_>, UpdateGasLimitRequest, Arc<_>, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:929:13: 932:21]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, _, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0599]: the method `map` exists for struct `Then<And<And<And<And<And<And<And<And<Exact<Opaque<&str>>, ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>`, but its trait bounds were not satisfied
   --> validator_client/src/http_api/mod.rs:958:10
    |
920 |       let post_gas_limit = eth_v1
    |  __________________________-
921 | |         .and(warp::path("validator"))
922 | |         .and(warp::path::param::<PublicKey>())
923 | |         .and(warp::path("gas_limit"))
...   |
957 | |         )
958 | |         .map(|reply| warp::reply::with_status(reply, warp::http::StatusCode::ACCEPTED));
    | |         -^^^ method cannot be called due to unsatisfied trait bounds
    | |_________|
    | 
    |
   ::: /home/clippo/.cargo/git/checkouts/warp-e423c7de4eccaa31/7e75acc/src/filter/then.rs:11:1
    |
11  |   pub struct Then<T, F> {
    |   ---------------------
    |   |
    |   doesn't satisfy `_: FilterBase`
    |   doesn't satisfy `_: Filter`
    |   doesn't satisfy `_: Iterator`
    |   doesn't satisfy `_: StreamExt`
    |   doesn't satisfy `_: Stream`
    |
    = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-d523eba1c9d608f9.long-type-764829791462733142.txt'
    = note: the following trait bounds were not satisfied:
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: Stream`
            which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: tokio_stream::StreamExt`
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: warp::filter::FilterBase`
            which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: warp::Filter`
            `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: Stream`
            which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: tokio_stream::StreamExt`
            `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: warp::filter::FilterBase`
            which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: warp::Filter`
            `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: Stream`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: tokio_stream::StreamExt`
            `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: warp::filter::FilterBase`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: warp::Filter`
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: Iterator`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: Iterator`

error[E0277]: the trait bound `(): Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:970:17
     |
970  |                 blocking_signed_json_task(signer, move || {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `()`
     |
     = help: the trait `Reply` is implemented for `(T,)`
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:968:10
    |
968 |         .then(
    |          ^^^^ expected due to this
969 |             |validator_pubkey: PublicKey, validator_store: Arc<ValidatorStore<T, E>>, signer| {
    |             --------------------------------------------------------------------------------- found signature defined here
    |
    = note: expected closure signature `fn(GenericPublicKey<_>, std::result::Result<Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(GenericPublicKey<_>, Arc<_>, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:969:13: 969:94]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0599]: the method `map` exists for struct `Then<And<And<And<And<And<And<And<Exact<Opaque<&str>>, Exact<...>>, ...>, ...>, ...>, ...>, ...>, ...>, ...>`, but its trait bounds were not satisfied
   --> validator_client/src/http_api/mod.rs:995:10
    |
961 |       let delete_gas_limit = eth_v1
    |  ____________________________-
962 | |         .and(warp::path("validator"))
963 | |         .and(warp::path::param::<PublicKey>())
964 | |         .and(warp::path("gas_limit"))
...   |
994 | |         )
995 | |         .map(|reply| warp::reply::with_status(reply, warp::http::StatusCode::NO_CONTENT));
    | |         -^^^ method cannot be called due to unsatisfied trait bounds
    | |_________|
    | 
    |
   ::: /home/clippo/.cargo/git/checkouts/warp-e423c7de4eccaa31/7e75acc/src/filter/then.rs:11:1
    |
11  |   pub struct Then<T, F> {
    |   ---------------------
    |   |
    |   doesn't satisfy `_: FilterBase`
    |   doesn't satisfy `_: Filter`
    |   doesn't satisfy `_: Iterator`
    |   doesn't satisfy `_: StreamExt`
    |   doesn't satisfy `_: Stream`
    |
    = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-d523eba1c9d608f9.long-type-15090605634825385487.txt'
    = note: the following trait bounds were not satisfied:
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: Stream`
            which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: tokio_stream::StreamExt`
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: warp::filter::FilterBase`
            which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: warp::Filter`
            `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: Stream`
            which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: tokio_stream::StreamExt`
            `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: warp::filter::FilterBase`
            which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: warp::Filter`
            `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: Stream`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: tokio_stream::StreamExt`
            `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: warp::filter::FilterBase`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: warp::Filter`
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: Iterator`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: Iterator`

error[E0599]: the method `map` exists for struct `Then<And<And<And<And<And<And<And<And<Exact<Opaque<&str>>, ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>`, but its trait bounds were not satisfied
   --> validator_client/src/http_api/mod.rs:849:10
    |
811 |       let post_fee_recipient = eth_v1
    |  ______________________________-
812 | |         .and(warp::path("validator"))
813 | |         .and(warp::path::param::<PublicKey>())
814 | |         .and(warp::path("feerecipient"))
...   |
848 | |         )
849 | |         .map(|reply| warp::reply::with_status(reply, warp::http::StatusCode::ACCEPTED));
    | |         -^^^ method cannot be called due to unsatisfied trait bounds
    | |_________|
    | 
    |
   ::: /home/clippo/.cargo/git/checkouts/warp-e423c7de4eccaa31/7e75acc/src/filter/then.rs:11:1
    |
11  |   pub struct Then<T, F> {
    |   ---------------------
    |   |
    |   doesn't satisfy `_: FilterBase`
    |   doesn't satisfy `_: Filter`
    |   doesn't satisfy `_: Iterator`
    |   doesn't satisfy `_: StreamExt`
    |   doesn't satisfy `_: Stream`
    |
    = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-74104a002a9e4722.long-type-12724452031844297296.txt'
    = note: the following trait bounds were not satisfied:
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: Stream`
            which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: tokio_stream::StreamExt`
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: warp::filter::FilterBase`
            which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: warp::Filter`
            `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: Stream`
            which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: tokio_stream::StreamExt`
            `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: warp::filter::FilterBase`
            which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: warp::Filter`
            `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: Stream`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: tokio_stream::StreamExt`
            `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: warp::filter::FilterBase`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: warp::Filter`
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: Iterator`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:820:13: 823:21]>: Iterator`

error[E0277]: the trait bound `SignedVoluntaryExit: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:1017:17
     |
1017 |                 blocking_signed_json_task(signer, move || {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `SignedVoluntaryExit`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:859:10
    |
859 |         .then(
    |          ^^^^ expected due to this
860 |             |validator_pubkey: PublicKey, validator_store: Arc<ValidatorStore<T, E>>, signer| {
    |             --------------------------------------------------------------------------------- found signature defined here
    |
    = note: expected closure signature `fn(GenericPublicKey<_>, std::result::Result<std::sync::Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(GenericPublicKey<_>, std::sync::Arc<_>, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:860:13: 860:94]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1009:10
     |
1009 |           .then(
     |            ^^^^ expected due to this
1010 | /             |pubkey: PublicKey,
1011 | |              query: api_types::VoluntaryExitQuery,
1012 | |              validator_store: Arc<ValidatorStore<T, E>>,
1013 | |              slot_clock: T,
1014 | |              log,
1015 | |              signer,
1016 | |              task_executor: TaskExecutor| {
     | |_________________________________________- found signature defined here
     |
     = note: expected closure signature `fn(GenericPublicKey<_>, VoluntaryExitQuery, std::result::Result<Arc<_>, Rejection>, _, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor) -> _`
                found closure signature `fn(GenericPublicKey<_>, VoluntaryExitQuery, Arc<_>, _, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>, _, TaskExecutor) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:1010:13: 1016:42]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, VoluntaryExitQuery, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, T, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor)>`

error[E0277]: the trait bound `ListKeystoresResponse: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:1042:13
     |
1042 |             blocking_signed_json_task(signer, move || Ok(keystores::list(validator_store)))
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `ListKeystoresResponse`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1041:10
     |
1041 |         .then(|signer, validator_store: Arc<ValidatorStore<T, E>>| {
     |          ^^^^ ---------------------------------------------------- found signature defined here
     |          |
     |          expected due to this
     |
     = note: expected closure signature `fn(impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<Arc<_>, Rejection>) -> _`
                found closure signature `fn(_, Arc<_>) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:1041:15: 1041:67]` to implement `warp::generic::Func<(impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>)>`

error[E0599]: the method `map` exists for struct `Then<And<And<And<And<And<And<And<Exact<Opaque<&str>>, Exact<...>>, ...>, ...>, ...>, ...>, ...>, ...>, ...>`, but its trait bounds were not satisfied
   --> validator_client/src/http_api/mod.rs:886:10
    |
852 |       let delete_fee_recipient = eth_v1
    |  ________________________________-
853 | |         .and(warp::path("validator"))
854 | |         .and(warp::path::param::<PublicKey>())
855 | |         .and(warp::path("feerecipient"))
...   |
885 | |         )
886 | |         .map(|reply| warp::reply::with_status(reply, warp::http::StatusCode::NO_CONTENT));
    | |         -^^^ method cannot be called due to unsatisfied trait bounds
    | |_________|
    | 
    |
   ::: /home/clippo/.cargo/git/checkouts/warp-e423c7de4eccaa31/7e75acc/src/filter/then.rs:11:1
    |
11  |   pub struct Then<T, F> {
    |   ---------------------
    |   |
    |   doesn't satisfy `_: FilterBase`
    |   doesn't satisfy `_: Filter`
    |   doesn't satisfy `_: Iterator`
    |   doesn't satisfy `_: StreamExt`
    |   doesn't satisfy `_: Stream`
    |
    = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-74104a002a9e4722.long-type-7988710767728157714.txt'
    = note: the following trait bounds were not satisfied:
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: Stream`
            which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: tokio_stream::StreamExt`
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: warp::filter::FilterBase`
            which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: warp::Filter`
            `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: Stream`
            which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: tokio_stream::StreamExt`
            `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: warp::filter::FilterBase`
            which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: warp::Filter`
            `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: Stream`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: tokio_stream::StreamExt`
            `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: warp::filter::FilterBase`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: warp::Filter`
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: Iterator`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:860:13: 860:94]>: Iterator`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:896:10
    |
896 |         .then(
    |          ^^^^ expected due to this
897 |             |validator_pubkey: PublicKey, validator_store: Arc<ValidatorStore<T, E>>, signer| {
    |             --------------------------------------------------------------------------------- found signature defined here
    |
    = note: expected closure signature `fn(GenericPublicKey<_>, std::result::Result<std::sync::Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(GenericPublicKey<_>, std::sync::Arc<_>, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:897:13: 897:94]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0277]: the trait bound `ImportKeystoresResponse: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:1063:17
     |
1063 |                 blocking_signed_json_task(signer, move || {
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `ImportKeystoresResponse`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1054:10
     |
1054 |           .then(
     |            ^^^^ expected due to this
1055 | /             move |request,
1056 | |                   signer,
1057 | |                   validator_dir,
1058 | |                   secrets_dir,
1059 | |                   validator_store,
1060 | |                   task_executor,
1061 | |                   log| {
     | |______________________- found signature defined here
     |
     = note: expected closure signature `fn(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<PathBuf, Rejection>, std::result::Result<PathBuf, Rejection>, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
                found closure signature `fn(ImportKeystoresRequest, _, PathBuf, PathBuf, Arc<ValidatorStore<_, _>>, TaskExecutor, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:1055:13: 1061:23]` to implement `warp::generic::Func<(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<PathBuf, Rejection>, std::result::Result<PathBuf, Rejection>, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>)>`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:928:10
    |
928 |           .then(
    |            ^^^^ expected due to this
929 | /             |validator_pubkey: PublicKey,
930 | |              request: api_types::UpdateGasLimitRequest,
931 | |              validator_store: Arc<ValidatorStore<T, E>>,
932 | |              signer| {
    | |____________________- found signature defined here
    |
    = note: expected closure signature `fn(GenericPublicKey<_>, _, std::result::Result<std::sync::Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(GenericPublicKey<_>, UpdateGasLimitRequest, std::sync::Arc<_>, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:929:13: 932:21]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, _, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0599]: the method `map` exists for struct `Then<And<And<And<And<And<And<And<And<Exact<Opaque<&str>>, ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>`, but its trait bounds were not satisfied
   --> validator_client/src/http_api/mod.rs:958:10
    |
920 |       let post_gas_limit = eth_v1
    |  __________________________-
921 | |         .and(warp::path("validator"))
922 | |         .and(warp::path::param::<PublicKey>())
923 | |         .and(warp::path("gas_limit"))
...   |
957 | |         )
958 | |         .map(|reply| warp::reply::with_status(reply, warp::http::StatusCode::ACCEPTED));
    | |         -^^^ method cannot be called due to unsatisfied trait bounds
    | |_________|
    | 
    |
   ::: /home/clippo/.cargo/git/checkouts/warp-e423c7de4eccaa31/7e75acc/src/filter/then.rs:11:1
    |
11  |   pub struct Then<T, F> {
    |   ---------------------
    |   |
    |   doesn't satisfy `_: FilterBase`
    |   doesn't satisfy `_: Filter`
    |   doesn't satisfy `_: Iterator`
    |   doesn't satisfy `_: StreamExt`
    |   doesn't satisfy `_: Stream`
    |
    = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-74104a002a9e4722.long-type-11366895387547330085.txt'
    = note: the following trait bounds were not satisfied:
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: Stream`
            which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: tokio_stream::StreamExt`
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: warp::filter::FilterBase`
            which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: warp::Filter`
            `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: Stream`
            which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: tokio_stream::StreamExt`
            `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: warp::filter::FilterBase`
            which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: warp::Filter`
            `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: Stream`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: tokio_stream::StreamExt`
            `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: warp::filter::FilterBase`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: warp::Filter`
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: Iterator`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:929:13: 932:21]>: Iterator`

error[E0277]: the trait bound `DeleteKeystoresResponse: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:1084:13
     |
1084 |             blocking_signed_json_task(signer, move || {
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `DeleteKeystoresResponse`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1083:10
     |
1083 |         .then(|request, signer, validator_store, task_executor, log| {
     |          ^^^^ ------------------------------------------------------ found signature defined here
     |          |
     |          expected due to this
     |
     = note: expected closure signature `fn(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
                found closure signature `fn(DeleteKeystoresRequest, _, Arc<ValidatorStore<_, _>>, TaskExecutor, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:1083:15: 1083:69]` to implement `warp::generic::Func<(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>)>`

error[E0277]: the trait bound `ListRemotekeysResponse: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:1094:13
     |
1094 |             blocking_signed_json_task(signer, move || Ok(remotekeys::list(validator_store)))
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `ListRemotekeysResponse`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1093:10
     |
1093 |         .then(|signer, validator_store: Arc<ValidatorStore<T, E>>| {
     |          ^^^^ ---------------------------------------------------- found signature defined here
     |          |
     |          expected due to this
     |
     = note: expected closure signature `fn(impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<Arc<_>, Rejection>) -> _`
                found closure signature `fn(_, Arc<_>) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:1093:15: 1093:67]` to implement `warp::generic::Func<(impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>)>`

error[E0631]: type mismatch in closure arguments
   --> validator_client/src/http_api/mod.rs:968:10
    |
968 |         .then(
    |          ^^^^ expected due to this
969 |             |validator_pubkey: PublicKey, validator_store: Arc<ValidatorStore<T, E>>, signer| {
    |             --------------------------------------------------------------------------------- found signature defined here
    |
    = note: expected closure signature `fn(GenericPublicKey<_>, std::result::Result<std::sync::Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
               found closure signature `fn(GenericPublicKey<_>, std::sync::Arc<_>, _) -> _`
    = note: required for `[closure@validator_client/src/http_api/mod.rs:969:13: 969:94]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`

error[E0599]: the method `map` exists for struct `Then<And<And<And<And<And<And<And<Exact<Opaque<&str>>, Exact<...>>, ...>, ...>, ...>, ...>, ...>, ...>, ...>`, but its trait bounds were not satisfied
   --> validator_client/src/http_api/mod.rs:995:10
    |
961 |       let delete_gas_limit = eth_v1
    |  ____________________________-
962 | |         .and(warp::path("validator"))
963 | |         .and(warp::path::param::<PublicKey>())
964 | |         .and(warp::path("gas_limit"))
...   |
994 | |         )
995 | |         .map(|reply| warp::reply::with_status(reply, warp::http::StatusCode::NO_CONTENT));
    | |         -^^^ method cannot be called due to unsatisfied trait bounds
    | |_________|
    | 
    |
   ::: /home/clippo/.cargo/git/checkouts/warp-e423c7de4eccaa31/7e75acc/src/filter/then.rs:11:1
    |
11  |   pub struct Then<T, F> {
    |   ---------------------
    |   |
    |   doesn't satisfy `_: FilterBase`
    |   doesn't satisfy `_: Filter`
    |   doesn't satisfy `_: Iterator`
    |   doesn't satisfy `_: StreamExt`
    |   doesn't satisfy `_: Stream`
    |
    = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-74104a002a9e4722.long-type-16198603502018555708.txt'
    = note: the following trait bounds were not satisfied:
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: Stream`
            which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: tokio_stream::StreamExt`
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: warp::filter::FilterBase`
            which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: warp::Filter`
            `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: Stream`
            which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: tokio_stream::StreamExt`
            `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: warp::filter::FilterBase`
            which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: warp::Filter`
            `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: Stream`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: tokio_stream::StreamExt`
            `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: warp::filter::FilterBase`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: warp::Filter`
            `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: Iterator`
            which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (GenericPublicKey<bls::impls::blst::types::PublicKey>,), Error = Rejection> + std::marker::Copy>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:969:13: 969:94]>: Iterator`

error[E0277]: the trait bound `ImportRemotekeysResponse: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:1105:13
     |
1105 |             blocking_signed_json_task(signer, move || {
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `ImportRemotekeysResponse`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1104:10
     |
1104 |         .then(|request, signer, validator_store, task_executor, log| {
     |          ^^^^ ------------------------------------------------------ found signature defined here
     |          |
     |          expected due to this
     |
     = note: expected closure signature `fn(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
                found closure signature `fn(ImportRemotekeysRequest, _, Arc<ValidatorStore<_, _>>, TaskExecutor, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:1104:15: 1104:69]` to implement `warp::generic::Func<(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>)>`

error[E0277]: the trait bound `DeleteRemotekeysResponse: Reply` is not satisfied
    --> validator_client/src/http_api/mod.rs:1118:13
     |
1118 |             blocking_signed_json_task(signer, move || {
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Reply` is not implemented for `DeleteRemotekeysResponse`
     |
     = help: the following other types implement trait `Reply`:
               Box<T>
               Cow<'static, str>
               log::internal::Logged
               hyper::Response<T>
               trace::internal::Traced
               warp::reply::Json
               Html<T>
               warp::reply::sealed::Reply_
             and 14 others
note: required by a bound in `blocking_signed_json_task`
    --> validator_client/src/http_api/mod.rs:1266:20
     |
1262 | pub async fn blocking_signed_json_task<S, F, T>(signer: S, func: F) -> resp
     |              ------------------------- required by a bound in this function
...
1266 |     T: Serialize + Reply + Send + 'static, // Check the closure of ur FnOnce
     |                    ^^^^^ required by this bound in `blocking_signed_json_task`

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1117:10
     |
1117 |         .then(|request, signer, validator_store, task_executor, log| {
     |          ^^^^ ------------------------------------------------------ found signature defined here
     |          |
     |          expected due to this
     |
     = note: expected closure signature `fn(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
                found closure signature `fn(DeleteRemotekeysRequest, _, Arc<ValidatorStore<_, _>>, TaskExecutor, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:1117:15: 1117:69]` to implement `warp::generic::Func<(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>)>`

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1009:10
     |
1009 |           .then(
     |            ^^^^ expected due to this
1010 | /             |pubkey: PublicKey,
1011 | |              query: api_types::VoluntaryExitQuery,
1012 | |              validator_store: Arc<ValidatorStore<T, E>>,
1013 | |              slot_clock: T,
1014 | |              log,
1015 | |              signer,
1016 | |              task_executor: TaskExecutor| {
     | |_________________________________________- found signature defined here
     |
     = note: expected closure signature `fn(GenericPublicKey<_>, VoluntaryExitQuery, std::result::Result<std::sync::Arc<_>, Rejection>, _, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor) -> _`
                found closure signature `fn(GenericPublicKey<_>, VoluntaryExitQuery, std::sync::Arc<_>, _, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>, _, TaskExecutor) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:1010:13: 1016:42]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, VoluntaryExitQuery, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, T, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor)>`

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1178:26
     |
314  |         .then(|validator_store: Arc<ValidatorStore<T, E>>, signer| {
     |               ---------------------------------------------------- found signature defined here
...
1178 |                         .or(get_lighthouse_validators)
     |                          ^^ expected due to this
     |
     = note: expected closure signature `fn(std::result::Result<Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
                found closure signature `fn(Arc<_>, _) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:314:15: 314:67]` to implement `warp::generic::Func<(std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`
     = note: required for `Then<And<And<And<And<Exact<Opaque<&str>>, Exact<Opaque<&str>>>, ...>, ...>, ...>, ...>` to implement `warp::filter::FilterBase`
     = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-d523eba1c9d608f9.long-type-3906823655880936258.txt'

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1041:10
     |
1041 |         .then(|signer, validator_store: Arc<ValidatorStore<T, E>>| {
     |          ^^^^ ---------------------------------------------------- found signature defined here
     |          |
     |          expected due to this
     |
     = note: expected closure signature `fn(impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<std::sync::Arc<_>, Rejection>) -> _`
                found closure signature `fn(_, std::sync::Arc<_>) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:1041:15: 1041:67]` to implement `warp::generic::Func<(impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>)>`

error[E0599]: the method `or` exists for struct `Or<Or<Or<Then<And<And<And<Exact<Opaque<&str>>, Exact<Opaque<&str>>>, ...>, ...>, ...>, ...>, ...>, ...>`, but its trait bounds were not satisfied
    --> validator_client/src/http_api/mod.rs:1179:26
     |
1175 | /                     get_node_version
1176 | |                         .or(get_lighthouse_health)
1177 | |                         .or(get_lighthouse_spec)
1178 | |                         .or(get_lighthouse_validators)
1179 | |                         .or(get_lighthouse_validators_pubkey)
     | |                         -^^ method cannot be called due to unsatisfied trait bounds
     | |_________________________|
     | 
     |
    ::: /home/clippo/.cargo/git/checkouts/warp-e423c7de4eccaa31/7e75acc/src/filter/or.rs:16:1
     |
16   |   pub struct Or<T, U> {
     |   -------------------
     |   |
     |   doesn't satisfy `_: FilterBase`
     |   doesn't satisfy `_: Filter`
     |
     = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-d523eba1c9d608f9.long-type-4771350299114414337.txt'
     = note: the following trait bounds were not satisfied:
             `warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:273:15: 273:23]>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:287:15: 287:23]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:301:15: 301:37]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:314:15: 314:67]>>: warp::filter::FilterBase`
             which is required by `warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:273:15: 273:23]>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:287:15: 287:23]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:301:15: 301:37]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:314:15: 314:67]>>: warp::Filter`
             `&warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:273:15: 273:23]>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:287:15: 287:23]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:301:15: 301:37]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:314:15: 314:67]>>: warp::filter::FilterBase`
             which is required by `&warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:273:15: 273:23]>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:287:15: 287:23]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:301:15: 301:37]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:314:15: 314:67]>>: warp::Filter`
             `&mut warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:273:15: 273:23]>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:287:15: 287:23]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:301:15: 301:37]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:314:15: 314:67]>>: warp::filter::FilterBase`
             which is required by `&mut warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:273:15: 273:23]>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:287:15: 287:23]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:301:15: 301:37]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:314:15: 314:67]>>: warp::Filter`

error[E0599]: the method `or` exists for struct `Then<And<And<And<And<And<And<And<And<And<..., ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>`, but its trait bounds were not satisfied
    --> validator_client/src/http_api/mod.rs:1189:26
     |
1188 | /                     post_validators
1189 | |                         .or(post_validators_keystore)
     | |                         -^^ method cannot be called due to unsatisfied trait bounds
     | |_________________________|
     | 
     |
    ::: /home/clippo/.cargo/git/checkouts/warp-e423c7de4eccaa31/7e75acc/src/filter/then.rs:11:1
     |
11   |   pub struct Then<T, F> {
     |   ---------------------
     |   |
     |   doesn't satisfy `_: FilterBase`
     |   doesn't satisfy `_: Filter`
     |
     = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-d523eba1c9d608f9.long-type-3614709639453241739.txt'
     = note: the following trait bounds were not satisfied:
             `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:196:48: 196:55]>, [closure@validator_client/src/http_api/mod.rs:197:9: 197:35]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:207:46: 207:53]>, [closure@validator_client/src/http_api/mod.rs:208:9: 208:33]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, [closure@validator_client/src/http_api/mod.rs:431:13: 437:47]>: warp::filter::FilterBase`
             which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:196:48: 196:55]>, [closure@validator_client/src/http_api/mod.rs:197:9: 197:35]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:207:46: 207:53]>, [closure@validator_client/src/http_api/mod.rs:208:9: 208:33]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, [closure@validator_client/src/http_api/mod.rs:431:13: 437:47]>: warp::Filter`
             `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:196:48: 196:55]>, [closure@validator_client/src/http_api/mod.rs:197:9: 197:35]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:207:46: 207:53]>, [closure@validator_client/src/http_api/mod.rs:208:9: 208:33]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, [closure@validator_client/src/http_api/mod.rs:431:13: 437:47]>: warp::filter::FilterBase`
             which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:196:48: 196:55]>, [closure@validator_client/src/http_api/mod.rs:197:9: 197:35]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:207:46: 207:53]>, [closure@validator_client/src/http_api/mod.rs:208:9: 208:33]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, [closure@validator_client/src/http_api/mod.rs:431:13: 437:47]>: warp::Filter`
             `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:196:48: 196:55]>, [closure@validator_client/src/http_api/mod.rs:197:9: 197:35]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:207:46: 207:53]>, [closure@validator_client/src/http_api/mod.rs:208:9: 208:33]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, [closure@validator_client/src/http_api/mod.rs:431:13: 437:47]>: warp::filter::FilterBase`
             which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:196:48: 196:55]>, [closure@validator_client/src/http_api/mod.rs:197:9: 197:35]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:207:46: 207:53]>, [closure@validator_client/src/http_api/mod.rs:208:9: 208:33]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, [closure@validator_client/src/http_api/mod.rs:431:13: 437:47]>: warp::Filter`

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1198:35
     |
666  | /             |validator_pubkey: PublicKey,
667  | |              body: api_types::ValidatorPatchRequest,
668  | |              validator_store: Arc<ValidatorStore<T, E>>,
669  | |              graffiti_file: Option<GraffitiFile>,
670  | |              signer,
671  | |              task_executor: TaskExecutor| {
     | |_________________________________________- found signature defined here
...
1198 |                   .or(warp::patch().and(patch_validators))
     |                                     ^^^ expected due to this
     |
     = note: expected closure signature `fn(GenericPublicKey<_>, _, std::result::Result<Arc<_>, Rejection>, std::option::Option<_>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor) -> _`
                found closure signature `fn(GenericPublicKey<_>, ValidatorPatchRequest, Arc<_>, std::option::Option<_>, _, TaskExecutor) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:666:13: 671:42]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, _, std::result::Result<Arc<ValidatorStore<T, E>>, Rejection>, std::option::Option<GraffitiFile>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor)>`
     = note: required for `Then<And<And<And<And<And<And<And<And<Exact<Opaque<&str>>, ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>` to implement `warp::filter::FilterBase`
     = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-d523eba1c9d608f9.long-type-11188398796661424827.txt'

error[E0599]: the method `or` exists for struct `Then<And<And<And<And<And<And<And<Exact<Opaque<&str>>, Exact<...>>, ...>, ...>, ...>, ...>, ...>, ...>, ...>`, but its trait bounds were not satisfied
    --> validator_client/src/http_api/mod.rs:1201:26
     |
1200 | /                     delete_lighthouse_keystores
1201 | |                         .or(delete_fee_recipient)
     | |                         -^^ method cannot be called due to unsatisfied trait bounds
     | |_________________________|
     | 
     |
    ::: /home/clippo/.cargo/git/checkouts/warp-e423c7de4eccaa31/7e75acc/src/filter/then.rs:11:1
     |
11   |   pub struct Then<T, F> {
     |   ---------------------
     |   |
     |   doesn't satisfy `_: FilterBase`
     |   doesn't satisfy `_: Filter`
     |
     = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-d523eba1c9d608f9.long-type-14127784889754068231.txt'
     = note: the following trait bounds were not satisfied:
             `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:224:38: 224:45]>>, [closure@validator_client/src/http_api/mod.rs:753:13: 753:72]>: warp::filter::FilterBase`
             which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:224:38: 224:45]>>, [closure@validator_client/src/http_api/mod.rs:753:13: 753:72]>: warp::Filter`
             `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:224:38: 224:45]>>, [closure@validator_client/src/http_api/mod.rs:753:13: 753:72]>: warp::filter::FilterBase`
             which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:224:38: 224:45]>>, [closure@validator_client/src/http_api/mod.rs:753:13: 753:72]>: warp::Filter`
             `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:224:38: 224:45]>>, [closure@validator_client/src/http_api/mod.rs:753:13: 753:72]>: warp::filter::FilterBase`
             which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:224:38: 224:45]>>, [closure@validator_client/src/http_api/mod.rs:753:13: 753:72]>: warp::Filter`

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1054:10
     |
1054 |           .then(
     |            ^^^^ expected due to this
1055 | /             move |request,
1056 | |                   signer,
1057 | |                   validator_dir,
1058 | |                   secrets_dir,
1059 | |                   validator_store,
1060 | |                   task_executor,
1061 | |                   log| {
     | |______________________- found signature defined here
     |
     = note: expected closure signature `fn(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<std::path::PathBuf, Rejection>, std::result::Result<std::path::PathBuf, Rejection>, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
                found closure signature `fn(ImportKeystoresRequest, _, std::path::PathBuf, std::path::PathBuf, std::sync::Arc<ValidatorStore<_, _>>, TaskExecutor, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:1055:13: 1061:23]` to implement `warp::generic::Func<(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<std::path::PathBuf, Rejection>, std::result::Result<std::path::PathBuf, Rejection>, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>)>`

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1083:10
     |
1083 |         .then(|request, signer, validator_store, task_executor, log| {
     |          ^^^^ ------------------------------------------------------ found signature defined here
     |          |
     |          expected due to this
     |
     = note: expected closure signature `fn(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
                found closure signature `fn(DeleteKeystoresRequest, _, std::sync::Arc<ValidatorStore<_, _>>, TaskExecutor, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:1083:15: 1083:69]` to implement `warp::generic::Func<(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>)>`

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1093:10
     |
1093 |         .then(|signer, validator_store: Arc<ValidatorStore<T, E>>| {
     |          ^^^^ ---------------------------------------------------- found signature defined here
     |          |
     |          expected due to this
     |
     = note: expected closure signature `fn(impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<std::sync::Arc<_>, Rejection>) -> _`
                found closure signature `fn(_, std::sync::Arc<_>) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:1093:15: 1093:67]` to implement `warp::generic::Func<(impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>)>`

error: cannot check whether the hidden type of opaque type satisfies auto traits
   --> validator_client/src/http_api/test_utils.rs:149:22
    |
149 |         tokio::spawn(server);
    |         ------------ ^^^^^^
    |         |
    |         required by a bound introduced by this call
    |
note: opaque type is declared here
   --> validator_client/src/http_api/mod.rs:136:26
    |
136 | ) -> Result<(SocketAddr, impl Future<Output = ()>), Error> {
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^
note: this item depends on auto traits of the hidden type, but may also be registering the hidden type. This is not supported right now. You can try moving the opaque type and the item that actually registers a hidden type into a new submodule
   --> validator_client/src/http_api/test_utils.rs:72:18
    |
72  |     pub async fn new_with_http_config(http_config: HttpConfig) -> Self {
    |                  ^^^^^^^^^^^^^^^^^^^^
note: required by a bound in `tokio::spawn`
   --> /home/clippo/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.29.1/src/task/spawn.rs:166:21
    |
164 |     pub fn spawn<T>(future: T) -> JoinHandle<T::Output>
    |            ----- required by a bound in this function
165 |     where
166 |         T: Future + Send + 'static,
    |                     ^^^^ required by this bound in `spawn`

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1104:10
     |
1104 |         .then(|request, signer, validator_store, task_executor, log| {
     |          ^^^^ ------------------------------------------------------ found signature defined here
     |          |
     |          expected due to this
     |
     = note: expected closure signature `fn(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
                found closure signature `fn(ImportRemotekeysRequest, _, std::sync::Arc<ValidatorStore<_, _>>, TaskExecutor, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:1104:15: 1104:69]` to implement `warp::generic::Func<(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>)>`

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1117:10
     |
1117 |         .then(|request, signer, validator_store, task_executor, log| {
     |          ^^^^ ------------------------------------------------------ found signature defined here
     |          |
     |          expected due to this
     |
     = note: expected closure signature `fn(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
                found closure signature `fn(DeleteRemotekeysRequest, _, std::sync::Arc<ValidatorStore<_, _>>, TaskExecutor, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:1117:15: 1117:69]` to implement `warp::generic::Func<(_, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, TaskExecutor, Logger<std::sync::Arc<dyn SendSyncRefUnwindSafeDrain<Err = slog::private::NeverStruct, Ok = ()>>>)>`

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1178:26
     |
314  |         .then(|validator_store: Arc<ValidatorStore<T, E>>, signer| {
     |               ---------------------------------------------------- found signature defined here
...
1178 |                         .or(get_lighthouse_validators)
     |                          ^^ expected due to this
     |
     = note: expected closure signature `fn(std::result::Result<std::sync::Arc<_>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone) -> _`
                found closure signature `fn(std::sync::Arc<_>, _) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:314:15: 314:67]` to implement `warp::generic::Func<(std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone)>`
     = note: required for `Then<And<And<And<And<Exact<Opaque<&str>>, Exact<Opaque<&str>>>, ...>, ...>, ...>, ...>` to implement `warp::filter::FilterBase`
     = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-74104a002a9e4722.long-type-17826282335143050859.txt'

error[E0599]: the method `or` exists for struct `Or<Or<Or<Then<And<And<And<Exact<Opaque<&str>>, Exact<Opaque<&str>>>, ...>, ...>, ...>, ...>, ...>, ...>`, but its trait bounds were not satisfied
    --> validator_client/src/http_api/mod.rs:1179:26
     |
1175 | /                     get_node_version
1176 | |                         .or(get_lighthouse_health)
1177 | |                         .or(get_lighthouse_spec)
1178 | |                         .or(get_lighthouse_validators)
1179 | |                         .or(get_lighthouse_validators_pubkey)
     | |                         -^^ method cannot be called due to unsatisfied trait bounds
     | |_________________________|
     | 
     |
    ::: /home/clippo/.cargo/git/checkouts/warp-e423c7de4eccaa31/7e75acc/src/filter/or.rs:16:1
     |
16   |   pub struct Or<T, U> {
     |   -------------------
     |   |
     |   doesn't satisfy `_: FilterBase`
     |   doesn't satisfy `_: Filter`
     |
     = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-74104a002a9e4722.long-type-12797299832639877060.txt'
     = note: the following trait bounds were not satisfied:
             `warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:273:15: 273:23]>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:287:15: 287:23]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:301:15: 301:37]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:314:15: 314:67]>>: warp::filter::FilterBase`
             which is required by `warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:273:15: 273:23]>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:287:15: 287:23]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:301:15: 301:37]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:314:15: 314:67]>>: warp::Filter`
             `&warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:273:15: 273:23]>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:287:15: 287:23]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:301:15: 301:37]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:314:15: 314:67]>>: warp::filter::FilterBase`
             which is required by `&warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:273:15: 273:23]>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:287:15: 287:23]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:301:15: 301:37]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:314:15: 314:67]>>: warp::Filter`
             `&mut warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:273:15: 273:23]>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:287:15: 287:23]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:301:15: 301:37]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:314:15: 314:67]>>: warp::filter::FilterBase`
             which is required by `&mut warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:273:15: 273:23]>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:287:15: 287:23]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:301:15: 301:37]>>, warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, [closure@validator_client/src/http_api/mod.rs:314:15: 314:67]>>: warp::Filter`

error[E0599]: the method `or` exists for struct `Then<And<And<And<And<And<And<And<And<And<..., ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>`, but its trait bounds were not satisfied
    --> validator_client/src/http_api/mod.rs:1189:26
     |
1188 | /                     post_validators
1189 | |                         .or(post_validators_keystore)
     | |                         -^^ method cannot be called due to unsatisfied trait bounds
     | |_________________________|
     | 
     |
    ::: /home/clippo/.cargo/git/checkouts/warp-e423c7de4eccaa31/7e75acc/src/filter/then.rs:11:1
     |
11   |   pub struct Then<T, F> {
     |   ---------------------
     |   |
     |   doesn't satisfy `_: FilterBase`
     |   doesn't satisfy `_: Filter`
     |
     = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-74104a002a9e4722.long-type-12114042324687096208.txt'
     = note: the following trait bounds were not satisfied:
             `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:196:48: 196:55]>, [closure@validator_client/src/http_api/mod.rs:197:9: 197:35]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:207:46: 207:53]>, [closure@validator_client/src/http_api/mod.rs:208:9: 208:33]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, [closure@validator_client/src/http_api/mod.rs:431:13: 437:47]>: warp::filter::FilterBase`
             which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:196:48: 196:55]>, [closure@validator_client/src/http_api/mod.rs:197:9: 197:35]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:207:46: 207:53]>, [closure@validator_client/src/http_api/mod.rs:208:9: 208:33]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, [closure@validator_client/src/http_api/mod.rs:431:13: 437:47]>: warp::Filter`
             `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:196:48: 196:55]>, [closure@validator_client/src/http_api/mod.rs:197:9: 197:35]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:207:46: 207:53]>, [closure@validator_client/src/http_api/mod.rs:208:9: 208:33]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, [closure@validator_client/src/http_api/mod.rs:431:13: 437:47]>: warp::filter::FilterBase`
             which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:196:48: 196:55]>, [closure@validator_client/src/http_api/mod.rs:197:9: 197:35]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:207:46: 207:53]>, [closure@validator_client/src/http_api/mod.rs:208:9: 208:33]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, [closure@validator_client/src/http_api/mod.rs:431:13: 437:47]>: warp::Filter`
             `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:196:48: 196:55]>, [closure@validator_client/src/http_api/mod.rs:197:9: 197:35]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:207:46: 207:53]>, [closure@validator_client/src/http_api/mod.rs:208:9: 208:33]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, [closure@validator_client/src/http_api/mod.rs:431:13: 437:47]>: warp::filter::FilterBase`
             which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:196:48: 196:55]>, [closure@validator_client/src/http_api/mod.rs:197:9: 197:35]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:207:46: 207:53]>, [closure@validator_client/src/http_api/mod.rs:208:9: 208:33]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:230:39: 230:46]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, [closure@validator_client/src/http_api/mod.rs:431:13: 437:47]>: warp::Filter`

error: cannot check whether the hidden type of opaque type satisfies auto traits
   --> validator_client/src/lib.rs:598:37
    |
598 |                 .spawn_without_exit(server, "http-api");
    |                  ------------------ ^^^^^^
    |                  |
    |                  required by a bound introduced by this call
    |
note: opaque type is declared here
   --> validator_client/src/http_api/mod.rs:136:26
    |
136 | ) -> Result<(SocketAddr, impl Future<Output = ()>), Error> {
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^
note: this item depends on auto traits of the hidden type, but may also be registering the hidden type. This is not supported right now. You can try moving the opaque type and the item that actually registers a hidden type into a new submodule
   --> validator_client/src/lib.rs:525:12
    |
525 |     pub fn start_service(&mut self) -> Result<(), String> {
    |            ^^^^^^^^^^^^^
note: required by a bound in `TaskExecutor::spawn_without_exit`
   --> /home/clippo/Documents/rustcontributions/lighthouse/common/task_executor/src/lib.rs:198:42
    |
196 |     pub fn spawn_without_exit(
    |            ------------------ required by a bound in this associated function
197 |         &self,
198 |         task: impl Future<Output = ()> + Send + 'static,
    |                                          ^^^^ required by this bound in `TaskExecutor::spawn_without_exit`

error[E0631]: type mismatch in closure arguments
    --> validator_client/src/http_api/mod.rs:1198:35
     |
666  | /             |validator_pubkey: PublicKey,
667  | |              body: api_types::ValidatorPatchRequest,
668  | |              validator_store: Arc<ValidatorStore<T, E>>,
669  | |              graffiti_file: Option<GraffitiFile>,
670  | |              signer,
671  | |              task_executor: TaskExecutor| {
     | |_________________________________________- found signature defined here
...
1198 |                   .or(warp::patch().and(patch_validators))
     |                                     ^^^ expected due to this
     |
     = note: expected closure signature `fn(GenericPublicKey<_>, _, std::result::Result<std::sync::Arc<_>, Rejection>, std::option::Option<_>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor) -> _`
                found closure signature `fn(GenericPublicKey<_>, ValidatorPatchRequest, std::sync::Arc<_>, std::option::Option<_>, _, TaskExecutor) -> _`
     = note: required for `[closure@validator_client/src/http_api/mod.rs:666:13: 671:42]` to implement `warp::generic::Func<(GenericPublicKey<bls::impls::blst::types::PublicKey>, _, std::result::Result<std::sync::Arc<ValidatorStore<T, E>>, Rejection>, std::option::Option<graffiti_file::GraffitiFile>, impl (for<'a> Fn(&'a [u8]) -> std::string::String) + Clone, TaskExecutor)>`
     = note: required for `Then<And<And<And<And<And<And<And<And<Exact<Opaque<&str>>, ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>, ...>` to implement `warp::filter::FilterBase`
     = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-74104a002a9e4722.long-type-388915212221575498.txt'

error[E0599]: the method `or` exists for struct `Then<And<And<And<And<And<And<And<Exact<Opaque<&str>>, Exact<...>>, ...>, ...>, ...>, ...>, ...>, ...>, ...>`, but its trait bounds were not satisfied
    --> validator_client/src/http_api/mod.rs:1201:26
     |
1200 | /                     delete_lighthouse_keystores
1201 | |                         .or(delete_fee_recipient)
     | |                         -^^ method cannot be called due to unsatisfied trait bounds
     | |_________________________|
     | 
     |
    ::: /home/clippo/.cargo/git/checkouts/warp-e423c7de4eccaa31/7e75acc/src/filter/then.rs:11:1
     |
11   |   pub struct Then<T, F> {
     |   ---------------------
     |   |
     |   doesn't satisfy `_: FilterBase`
     |   doesn't satisfy `_: Filter`
     |
     = note: the full type name has been written to '/home/clippo/Documents/rustcontributions/lighthouse/target/debug/deps/validator_client-74104a002a9e4722.long-type-10970351178299848214.txt'
     = note: the following trait bounds were not satisfied:
             `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:224:38: 224:45]>>, [closure@validator_client/src/http_api/mod.rs:753:13: 753:72]>: warp::filter::FilterBase`
             which is required by `warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:224:38: 224:45]>>, [closure@validator_client/src/http_api/mod.rs:753:13: 753:72]>: warp::Filter`
             `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:224:38: 224:45]>>, [closure@validator_client/src/http_api/mod.rs:753:13: 753:72]>: warp::filter::FilterBase`
             which is required by `&warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:224:38: 224:45]>>, [closure@validator_client/src/http_api/mod.rs:753:13: 753:72]>: warp::Filter`
             `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:224:38: 224:45]>>, [closure@validator_client/src/http_api/mod.rs:753:13: 753:72]>: warp::filter::FilterBase`
             which is required by `&mut warp::filter::then::Then<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, Exact<warp::path::internal::Opaque<&str>>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + std::marker::Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (_,), Error = Rejection> + std::marker::Copy>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:179:34: 179:41]>>, warp::filter::then::Then<warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:182:50: 182:57]>, [closure@validator_client/src/http_api/mod.rs:183:9: 183:37]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:193:48: 193:55]>>, warp::filter::map::Map<impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Infallible> + std::marker::Copy, [closure@validator_client/src/http_api/mod.rs:224:38: 224:45]>>, [closure@validator_client/src/http_api/mod.rs:753:13: 753:72]>: warp::Filter`

Some errors have detailed explanations: E0277, E0599, E0631.
For more information about an error, try `rustc --explain E0277`.
warning: `validator_client` (lib) generated 5 warnings
error: could not compile `validator_client` (lib) due to 61 previous errors; 5 warnings emitted
warning: build failed, waiting for other jobs to finish...
warning: `validator_client` (lib test) generated 5 warnings (5 duplicates)
error: could not compile `validator_client` (lib test) due to 61 previous errors; 5 warnings emitted
